<?xml version="1.0" encoding="UTF-8"?>
<!--
*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
*
*  WSO2 Inc. licenses this file to you under the Apache License,
*  Version 2.0 (the "License"); you may not use this file except
*  in compliance with the License.
*  You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
-->
<template xmlns="http://ws.apache.org/ns/synapse" name="updateSource">
    <parameter name="id" description="Source ID. A string."/>
    <parameter name="sourceType" description="Data source name."/>
    <parameter name="parameters" description="Source-specific configuration."/>
    <parameter name="resources" description="An array of source-specific resources."/>
    <parameter name="name" description="Custom identifier for the user. A string."/>
    <parameter name="auth" description="An array of source-specific identities."/>
    <parameter name="validate" description="Allows to suppress validation of your token with the source."/>
    <sequence>
        <property name="uri.var.sourceType" expression="$func:sourceType"/>
        <property name="uri.var.parameters" expression="$func:parameters"/>
        <property name="uri.var.resources" expression="$func:resources"/>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.auth" expression="$func:auth"/>
        <property name="uri.var.validate" expression="$func:validate"/>
        <payloadFactory media-type="json">
            <format>
                {
                "id": "$1"
                }
            </format>
            <args>
                <arg evaluator="xml" expression="$func:id"/>
            </args>
        </payloadFactory>
        <script language="js"><![CDATA[
		    //request body param variables
		    var sourceType = mc.getProperty('uri.var.sourceType');
		    var parameters = mc.getProperty('uri.var.parameters');
		    var resources = mc.getProperty('uri.var.resources');
		    var name = mc.getProperty('uri.var.name');
		    var auth = mc.getProperty('uri.var.auth');
		    var validate = mc.getProperty('uri.var.validate');
		    //Get the existing payload
			var payload = mc.getPayloadJSON();
			if (sourceType != null && sourceType != "") {
				payload["source_type"]=sourceType;
			}
			if (parameters != null && parameters != "") {
				payload["parameters"]=parameters;
			}
			if (resources != null && resources != "") {
				payload["resources"]=resources;
			}
			if (name != null && name != "") {
				payload["name"]=name;
			}
			if (auth != null && auth != "") {
				payload["auth"]=auth;
			}
			if (validate != null && validate != "") {
				payload["validate"]=validate;
			}
			//Set the newly constructed payload
			mc.setPayloadJSON(payload);
        	]]>
        </script>
        <call>
            <endpoint>
                <http method="PUT"
                      uri-template="{uri.var.datasift.apiUrl}/{uri.var.datasift.apiVersion}/source/update"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="Access-Control-Allow-Headers" scope="transport" action="remove"/>
        <header name="Access-Control-Allow-Origin" scope="transport" action="remove"/>
        <header name="Transfer-Encoding" scope="transport" action="remove"/>
        <header name="P3P" scope="transport" action="remove"/>
        <header name="X-API-Version" scope="transport" action="remove"/>
        <header name="X-Cache-Control" scope="transport" action="remove"/>
        <header name="X-Frame-Options" scope="transport" action="remove"/>
        <header name="X-RateLimit-Remaining" scope="transport" action="remove"/>
        <header name="X-RateLimit-Cost" scope="transport" action="remove"/>
        <header name="X-RateLimit-Limit" scope="transport" action="remove"/>
        <header name="X-RateLimit-Reset" scope="transport" action="remove"/>
        <header name="X-RateLimit-Reset-Ttl" scope="transport" action="remove"/>
        <header name="X-Served-By" scope="transport" action="remove"/>
        <header name="Server" scope="transport" action="remove"/>
    </sequence>
</template>